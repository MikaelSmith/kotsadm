
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kotsadm.api.name" . }}
  labels:
{{ include "kotsadm.api.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kotsadm.api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kotsadm.api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - env:
        - name: SESSION_KEY
          valueFrom:
            secretKeyRef:
              key: key
              name: session
        - name: POSTGRES_URI
          valueFrom:
            secretKeyRef:
              key: uri
              name: ship-enterprise-postgres
        - name: INIT_SERVER_URI
          value: http://init-server:3000
        - name: WATCH_SERVER_URI
          value: http://watch-server:3000
        - name: PINO_LOG_PRETTY
          value: "1"
        - name: S3_ENDPOINT
          value: ""
        - name: S3_BUCKET_NAME
          value: ""
        - name: S3_ACCESS_KEY_ID
          value: ""
        - name: S3_SECRET_ACCESS_KEY
          value: ""
        - name: S3_BUCKET_ENDPOINT
          value:
        - name: SHIP_API_ADVERTISE_ENDPOINT
          value: http://docker.for.mac.localhost:30065
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: github-app
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: github-app
        - name: GITHUB_INTEGRATION_ID
          valueFrom:
            secretKeyRef:
              key: integration-id
              name: github-app
        - name: SHIP_API_ENDPOINT
          value: http://ship-cluster-api.default.svc.cluster.local:3000
        - name: GRAPHQL_PREM_ENDPOINT
          value: https://pg.replicated.com/graphql
        - name: TRACER_NAME
          value: ship-cluster-api
        image: registry.replicated.com/ship-enterprise/ship-cluster-api
        imagePullPolicy: IfNotPresent
        name: ship-cluster-api
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9229
          name: debug
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 2
          periodSeconds: 2
        volumeMounts:
        - mountPath: /keys/github
          name: github-app-private-key
          readOnly: true
        resources:
          {{- toYaml .Values.api.resources | nindent 12 }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: Always
      volumes:
      - name: github-app-private-key
        secret:
          secretName: github-app-private-key
